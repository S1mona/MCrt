// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// funk1
double funk1(arma::mat x, arma::vec y, String test, double betasbarj, int j);
RcppExport SEXP MCrt_funk1(SEXP xSEXP, SEXP ySEXP, SEXP testSEXP, SEXP betasbarjSEXP, SEXP jSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< String >::type test(testSEXP);
    Rcpp::traits::input_parameter< double >::type betasbarj(betasbarjSEXP);
    Rcpp::traits::input_parameter< int >::type j(jSEXP);
    __result = Rcpp::wrap(funk1(x, y, test, betasbarj, j));
    return __result;
END_RCPP
}
// cppselect
NumericVector cppselect(arma::vec X, arma::vec index);
RcppExport SEXP MCrt_cppselect(SEXP XSEXP, SEXP indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::vec >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type index(indexSEXP);
    __result = Rcpp::wrap(cppselect(X, index));
    return __result;
END_RCPP
}
// whichis
NumericVector whichis(arma::vec X, double z);
RcppExport SEXP MCrt_whichis(SEXP XSEXP, SEXP zSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::vec >::type X(XSEXP);
    Rcpp::traits::input_parameter< double >::type z(zSEXP);
    __result = Rcpp::wrap(whichis(X, z));
    return __result;
END_RCPP
}
// inwhich_group
NumericVector inwhich_group(arma::mat Intervals, arma::vec v);
RcppExport SEXP MCrt_inwhich_group(SEXP IntervalsSEXP, SEXP vSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type Intervals(IntervalsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type v(vSEXP);
    __result = Rcpp::wrap(inwhich_group(Intervals, v));
    return __result;
END_RCPP
}
// randomizer
double randomizer(NumericVector vvec);
RcppExport SEXP MCrt_randomizer(SEXP vvecSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type vvec(vvecSEXP);
    __result = Rcpp::wrap(randomizer(vvec));
    return __result;
END_RCPP
}
// Sdefine
arma::mat Sdefine(arma::vec xbetas, int intN, int n, arma::vec XBETASG, arma::vec resid, double ymin, double ymax);
RcppExport SEXP MCrt_Sdefine(SEXP xbetasSEXP, SEXP intNSEXP, SEXP nSEXP, SEXP XBETASGSEXP, SEXP residSEXP, SEXP yminSEXP, SEXP ymaxSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::vec >::type xbetas(xbetasSEXP);
    Rcpp::traits::input_parameter< int >::type intN(intNSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type XBETASG(XBETASGSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type resid(residSEXP);
    Rcpp::traits::input_parameter< double >::type ymin(yminSEXP);
    Rcpp::traits::input_parameter< double >::type ymax(ymaxSEXP);
    __result = Rcpp::wrap(Sdefine(xbetas, intN, n, XBETASG, resid, ymin, ymax));
    return __result;
END_RCPP
}
// Sdefine_knn
arma::mat Sdefine_knn(arma::vec xbetas, int knn, int n, arma::vec XBETASG, arma::vec resid, double ymin, double ymax);
RcppExport SEXP MCrt_Sdefine_knn(SEXP xbetasSEXP, SEXP knnSEXP, SEXP nSEXP, SEXP XBETASGSEXP, SEXP residSEXP, SEXP yminSEXP, SEXP ymaxSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::vec >::type xbetas(xbetasSEXP);
    Rcpp::traits::input_parameter< int >::type knn(knnSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type XBETASG(XBETASGSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type resid(residSEXP);
    Rcpp::traits::input_parameter< double >::type ymin(yminSEXP);
    Rcpp::traits::input_parameter< double >::type ymax(ymaxSEXP);
    __result = Rcpp::wrap(Sdefine_knn(xbetas, knn, n, XBETASG, resid, ymin, ymax));
    return __result;
END_RCPP
}
// cppMCcont15
arma::mat cppMCcont15(arma::mat x, arma::vec y, int intN, String test, double betabarj, int j, int MC, double ymin, double ymax, String method);
RcppExport SEXP MCrt_cppMCcont15(SEXP xSEXP, SEXP ySEXP, SEXP intNSEXP, SEXP testSEXP, SEXP betabarjSEXP, SEXP jSEXP, SEXP MCSEXP, SEXP yminSEXP, SEXP ymaxSEXP, SEXP methodSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< int >::type intN(intNSEXP);
    Rcpp::traits::input_parameter< String >::type test(testSEXP);
    Rcpp::traits::input_parameter< double >::type betabarj(betabarjSEXP);
    Rcpp::traits::input_parameter< int >::type j(jSEXP);
    Rcpp::traits::input_parameter< int >::type MC(MCSEXP);
    Rcpp::traits::input_parameter< double >::type ymin(yminSEXP);
    Rcpp::traits::input_parameter< double >::type ymax(ymaxSEXP);
    Rcpp::traits::input_parameter< String >::type method(methodSEXP);
    __result = Rcpp::wrap(cppMCcont15(x, y, intN, test, betabarj, j, MC, ymin, ymax, method));
    return __result;
END_RCPP
}
